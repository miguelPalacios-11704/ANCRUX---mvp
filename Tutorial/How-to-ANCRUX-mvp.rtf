{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica-BoldOblique;
}
{\colortbl;\red255\green255\blue255;\red14\green14\blue14;}
{\*\expandedcolortbl;;\cssrgb\c6700\c6700\c6700;}
\margl1440\margr1440\vieww16620\viewh19940\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs22 \cf0 PASOS PARA USAR ANCRUX\
\

\f1\b ** Ancrux permite encriptar videos y que la \'fanica forma de desencriptarlos es pagando un invoiced lightning\
\
1. Abrir el servidor
\f0\b0 \
	En la primera terminal:\
		cd ~/ancrux-mvp\
		npm start\
	\
	Salida esperada: Server listening at http://0.0.0.0:3000\
\
2.
\f1\b  Subir un video\
	
\f0\b0 En otra terminal (nueva)\
	curl -F 'file=@"/Users/pedromerino/Developer/Dank ass sandboarding son.mp4";type=video/mp4' \\\
  http://localhost:3000/videos\
\
	i.e curl -F \'91file=@direcci\'f3n-de-tu-video\'92 \\http://localhost:3000/videos\
\
	Salida esperada: \{"id":"<VIDEO_ID>","algo":"aes-256-gcm","size":1549786\}\
\
3. 
\f1\b Crear un invoice Lightning\
	
\f0\b0 Usa el <VIDEO_ID> del paso anterior:\
	curl -X POST http://localhost:3000/pay/<VIDEO_ID>\
	\
	Respuesta:  \{"video_id":"<VIDEO_ID>","bolt11":"lntb10u1p5...","payment_hash":"..."\}\
\

\f1\b 4. Pagar el invoice\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\b0 \cf2 Abre tu wallet Lightning Testnet (Mutiny, Phoenix Testnet o Alby Testnet)\
\uc0\u8594  Pega el bolt11 y paga.\
\uc0\u8594  Espera la confirmaci\'f3n del pago.\
\

\f1\b 5. Verificar el estado del pago\

\f0\b0 	curl http://localhost:3000/pay/<VIDEO_ID>/status\
	\
	Esperado: \{"invoice_status":"settled","video_state":"paid"\}\
\

\f1\b 6. Obtener las claves de desencriptado\
	
\f0\b0 curl http://localhost:3000/keys/<VIDEO_ID>\
	\
	Respuesta: \{\
 		\'93cek_b64":"<clave_base64>",\
 		\'93nonce_b64":"<nonce_base64>" \
		\}\

\f1\b 7. Descargar el ciphertext\

\f0\b0 	curl -o cipher.bin http://localhost:3000/videos/<VIDEO_ID>\
\

\f1\b 8. Desencriptar el video localmente\
	
\f0\b0 node src/decrypt_local.js cipher.bin video_out.mp4 "<CEK_B64>" "<NONCE_B64>"\
\

\f1\b 9. Verificar el video\
	
\f0\b0 open video_out.mp4\
\

\f1\b 10. (Opcional) Verificar integridad\
	
\f0\b0 shasum -a 256 "/Users/pedromerino/Developer/Dank ass sandboarding son.mp4"\
	shasum -a 256 ./video_out.mp4\
	
\f2\i\b Los hashes deben de coincidir\
\
}